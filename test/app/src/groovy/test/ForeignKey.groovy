package test

import groovy.transform.CompileStatic
import groovy.transform.EqualsAndHashCode
import groovy.transform.ToString

/**
 * Represents an 'alter table ...' statement for a foreign key from the exported schema DDL.
 *
 * @author <a href='mailto:burt_beckwith@hms.harvard.edu'>Burt Beckwith</a>
 */
@CompileStatic
@EqualsAndHashCode(excludes=['create', 'name']) // name is usually not specified (generated by Hibernate, e.g. 'FKE22325F0EA293F25')
@ToString(includeNames=true, includePackage=false)
class ForeignKey extends AbstractSqlType {

	String table
	String name
	String column
	String referenced

	ForeignKey(String table, String column, String referenced, String name = null, String create = null) {
		super(create)
		this.table = table.toUpperCase()
		this.column = column.toUpperCase()
		this.referenced = referenced.toUpperCase()
		this.name = name?.toUpperCase()
	}

	String asSql() {
		'alter table ' + table + ' add constraint ' + name + ' foreign key (' + column + ') references ' + referenced
	}
}
